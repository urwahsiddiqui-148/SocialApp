plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
    throw new Runtime ("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.Social_media_app"  // Fixed typo in the namespace

    // Set explicit values if flutter.* properties are not working
    compileSdk = 34  // Adjust based on your Flutter version and SDK compatibility
    ndkVersion = "23.1.7779620"

    defaultConfig {
        applicationId = "com.example.Social_media_app"
        minSdk = 21  // Adjust this value based on your project needs
        targetSdk = 34  // Keep this value in sync with compileSdk
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildTypes {
        release {
            // Configure your signing config for release
            signingConfig = signingConfigs.debug
            minifyEnabled false  // You can change this if you want to enable Proguard
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}